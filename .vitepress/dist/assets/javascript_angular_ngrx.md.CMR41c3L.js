import{_ as a,c as t,o as i,ae as n}from"./chunks/framework.EaAuVE1v.js";const u=JSON.parse('{"title":"NgRX","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/angular/ngrx.md","filePath":"javascript/angular/ngrx.md"}'),l={name:"javascript/angular/ngrx.md"};function o(r,e,s,p,c,d){return i(),t("div",null,e[0]||(e[0]=[n(`<h1 id="ngrx" tabindex="-1"><a href="./readme.html">NgRX</a> <a class="header-anchor" href="#ngrx" aria-label="Permalink to &quot;[NgRX](readme.md)&quot;">​</a></h1><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><p>NgRx is a framework for building reactive applications in Angular. NgRx provides libraries for:</p><ul><li>Managing global and local state.</li><li>Isolation of side effects to promote a cleaner component architecture.</li><li>Entity collection management.</li><li>Integration with the Angular Router.</li><li>Developer tooling that enhances developer experience when building many different types of applications.</li></ul><p>NgRx packages are divided into a few main categories</p><ul><li><p>State</p><ul><li>Store - RxJS powered global state management for Angular apps, inspired by Redux.</li><li>Effects - Side effect model for @ngrx/store.</li><li>Router Store - Bindings to connect the Angular Router to @ngrx/store.</li><li>Entity - Entity State adapter for managing record collections.</li><li>ComponentStore - Standalone library for managing local/component state.</li></ul></li><li><p>Data</p><ul><li>Data - Extension for simplified entity data management.</li></ul></li><li><p>View</p><ul><li>Component - Extension for fully reactive Angular applications.</li></ul></li><li><p>Developer Tooling</p><ul><li>Store Devtools - Instrumentation for @ngrx/store that enables visual tracking of state and time-travel debugging.</li><li>Schematics - Scaffolding library for Angular applications using NgRx libraries.</li></ul></li></ul><h2 id="installation-d-ngrx" tabindex="-1">Installation d&#39;NgRX <a class="header-anchor" href="#installation-d-ngrx" aria-label="Permalink to &quot;Installation d&#39;NgRX&quot;">​</a></h2><p><strong>Installer NgRX :</strong></p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">npm install @ngrx/store --save</span></span></code></pre></div><p><strong>Ajouter NgRX à un projet :</strong></p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ng add @ngrx/store@latest</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ng add @ngrx/store@latest --minimal false</span></span></code></pre></div><p>La seconde commande permet de faire la configuration du store directement dans <code>app.module.ts</code></p><h2 id="sources" tabindex="-1">Sources <a class="header-anchor" href="#sources" aria-label="Permalink to &quot;Sources&quot;">​</a></h2><ul><li><a href="https://ngrx.io/guide/store/install" target="_blank" rel="noreferrer">Site officiel NgRX</a></li></ul>`,14)]))}const h=a(l,[["render",o]]);export{u as __pageData,h as default};
